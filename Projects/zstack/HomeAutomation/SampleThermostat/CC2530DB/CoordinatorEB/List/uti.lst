###############################################################################
#
# IAR C/C++ Compiler V9.30.3.3983 for 8051                13/Mar/2017  16:39:06
# Copyright 2004-2016 IAR Systems AB.
# Standalone license - IAR Embedded Workbench for 8051
#
#    Core               =  plain
#    Code model         =  banked
#    Data model         =  large
#    Calling convention =  xdata reentrant
#    Constant location  =  data_rom
#    Dptr setup         =  1,16
#                          
#    Source file        =  
#        D:\GitHub\TripleS_Zigbee\Projects\zstack\HomeAutomation\MY-SOURCE\uti.c
#    Command line       =  
#        -f
#        D:\GitHub\TripleS_Zigbee\Projects\zstack\HomeAutomation\SampleThermostat\CC2530DB\..\..\..\Tools\CC2530DB\f8wCoord.cfg
#        (-DCPU32MHZ -DROOT=__near_func -DMAC_CFG_APP_PENDING_QUEUE=TRUE
#        -DMAC_CFG_TX_DATA_MAX=5 -DMAC_CFG_TX_MAX=8 -DMAC_CFG_RX_MAX=5
#        -DZDO_COORDINATOR -DRTR_NWK) -f
#        D:\GitHub\TripleS_Zigbee\Projects\zstack\HomeAutomation\SampleThermostat\CC2530DB\..\..\..\Tools\CC2530DB\f8wConfig.cfg
#        (-DZIGBEEPRO -DSECURE=1 -DZG_SECURE_DYNAMIC=0 -DREFLECTOR
#        -DDEFAULT_CHANLIST=0x00000800 -DZDAPP_CONFIG_PAN_ID=0xFAFA
#        -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MASK=0x007F
#        -DBEACON_REQUEST_DELAY=100 -DBEACON_REQ_DELAY_MASK=0x00FF
#        -DLINK_STATUS_JITTER_MASK=0x007F -DROUTE_EXPIRY_TIME=30
#        -DAPSC_ACK_WAIT_DURATION_POLLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7
#        -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3
#        -DNWK_MAX_DATA_RETRIES=2 -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9
#        -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40 -DNWK_MAX_BINDING_ENTRIES=4
#        -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01, 0x03, 0x05, 0x07,
#        0x09, 0x0B, 0x0D, 0x0F, 0x00, 0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C,
#        0x0D}" -DMAC_MAX_FRAME_SIZE=116 -DZDNWKMGR_MIN_TRANSMISSIONS=20
#        "-DCONST=const __code" -DGENERIC=__generic -DRFD_RCVC_ALWAYS_ON=FALSE
#        -DPOLL_RATE=1000 -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100
#        -DREJOIN_POLL_RATE=440 -DREJOIN_BACKOFF=900000 -DREJOIN_SCAN=900000)
#        -f
#        D:\GitHub\TripleS_Zigbee\Projects\zstack\HomeAutomation\SampleThermostat\CC2530DB\..\..\..\Tools\CC2530DB\f8wZCL.cfg
#        D:\GitHub\TripleS_Zigbee\Projects\zstack\HomeAutomation\MY-SOURCE\uti.c
#        -D COORDINATOR -D SECURE=1 -D TC_LINKKEY_JOIN -D NV_INIT -D NV_RESTORE
#        -D xHOLD_AUTO_START -D ZTOOL_P1 -D MT_TASK -D MT_APP_FUNC -D
#        MT_SYS_FUNC -D MT_ZDO_FUNC -D LCD_SUPPORTED=DEBUG -D
#        MULTICAST_ENABLED=FALSE -D ZCL_READ -D ZCL_WRITE -D ZCL_REPORT -D
#        ZCL_EZMODE -D ZCL_BASIC -D ZCL_IDENTIFY -D ZCL_ON_OFF -D
#        ZCL_HVAC_CLUSTER -D xHAL_UART=TRUE -D xHAL_UART_DMA=1 -lC
#        D:\GitHub\TripleS_Zigbee\Projects\zstack\HomeAutomation\SampleThermostat\CC2530DB\CoordinatorEB\List
#        -lA
#        D:\GitHub\TripleS_Zigbee\Projects\zstack\HomeAutomation\SampleThermostat\CC2530DB\CoordinatorEB\List
#        --diag_suppress Pe001,Pa010 -o
#        D:\GitHub\TripleS_Zigbee\Projects\zstack\HomeAutomation\SampleThermostat\CC2530DB\CoordinatorEB\Obj
#        -e --debug --core=plain --dptr=16,1 --data_model=large
#        --code_model=banked --calling_convention=xdata_reentrant
#        --place_constants=data_rom --nr_virtual_regs 16 -I
#        D:\GitHub\TripleS_Zigbee\Projects\zstack\HomeAutomation\SampleThermostat\CC2530DB\
#        -I
#        D:\GitHub\TripleS_Zigbee\Projects\zstack\HomeAutomation\SampleThermostat\CC2530DB\..\Source\
#        -I
#        D:\GitHub\TripleS_Zigbee\Projects\zstack\HomeAutomation\SampleThermostat\CC2530DB\..\..\Source\
#        -I
#        D:\GitHub\TripleS_Zigbee\Projects\zstack\HomeAutomation\SampleThermostat\CC2530DB\..\..\..\HomeAutomation\MY-SOURCE\
#        -I
#        D:\GitHub\TripleS_Zigbee\Projects\zstack\HomeAutomation\SampleThermostat\CC2530DB\..\..\..\ZMain\TI2530DB\
#        -I
#        D:\GitHub\TripleS_Zigbee\Projects\zstack\HomeAutomation\SampleThermostat\CC2530DB\..\..\..\..\..\Components\hal\include\
#        -I
#        D:\GitHub\TripleS_Zigbee\Projects\zstack\HomeAutomation\SampleThermostat\CC2530DB\..\..\..\..\..\Components\hal\target\CC2530EB\
#        -I
#        D:\GitHub\TripleS_Zigbee\Projects\zstack\HomeAutomation\SampleThermostat\CC2530DB\..\..\..\..\..\Components\mac\include\
#        -I
#        D:\GitHub\TripleS_Zigbee\Projects\zstack\HomeAutomation\SampleThermostat\CC2530DB\..\..\..\..\..\Components\mac\high_level\
#        -I
#        D:\GitHub\TripleS_Zigbee\Projects\zstack\HomeAutomation\SampleThermostat\CC2530DB\..\..\..\..\..\Components\mac\low_level\srf04\
#        -I
#        D:\GitHub\TripleS_Zigbee\Projects\zstack\HomeAutomation\SampleThermostat\CC2530DB\..\..\..\..\..\Components\mac\low_level\srf04\single_chip\
#        -I
#        D:\GitHub\TripleS_Zigbee\Projects\zstack\HomeAutomation\SampleThermostat\CC2530DB\..\..\..\..\..\Components\mt\
#        -I
#        D:\GitHub\TripleS_Zigbee\Projects\zstack\HomeAutomation\SampleThermostat\CC2530DB\..\..\..\..\..\Components\osal\include\
#        -I
#        D:\GitHub\TripleS_Zigbee\Projects\zstack\HomeAutomation\SampleThermostat\CC2530DB\..\..\..\..\..\Components\services\saddr\
#        -I
#        D:\GitHub\TripleS_Zigbee\Projects\zstack\HomeAutomation\SampleThermostat\CC2530DB\..\..\..\..\..\Components\services\sdata\
#        -I
#        D:\GitHub\TripleS_Zigbee\Projects\zstack\HomeAutomation\SampleThermostat\CC2530DB\..\..\..\..\..\Components\stack\af\
#        -I
#        D:\GitHub\TripleS_Zigbee\Projects\zstack\HomeAutomation\SampleThermostat\CC2530DB\..\..\..\..\..\Components\stack\nwk\
#        -I
#        D:\GitHub\TripleS_Zigbee\Projects\zstack\HomeAutomation\SampleThermostat\CC2530DB\..\..\..\..\..\Components\stack\sapi\
#        -I
#        D:\GitHub\TripleS_Zigbee\Projects\zstack\HomeAutomation\SampleThermostat\CC2530DB\..\..\..\..\..\Components\stack\sec\
#        -I
#        D:\GitHub\TripleS_Zigbee\Projects\zstack\HomeAutomation\SampleThermostat\CC2530DB\..\..\..\..\..\Components\stack\sys\
#        -I
#        D:\GitHub\TripleS_Zigbee\Projects\zstack\HomeAutomation\SampleThermostat\CC2530DB\..\..\..\..\..\Components\stack\zcl\
#        -I
#        D:\GitHub\TripleS_Zigbee\Projects\zstack\HomeAutomation\SampleThermostat\CC2530DB\..\..\..\..\..\Components\stack\zdo\
#        -I
#        D:\GitHub\TripleS_Zigbee\Projects\zstack\HomeAutomation\SampleThermostat\CC2530DB\..\..\..\..\..\Components\zmac\
#        -I
#        D:\GitHub\TripleS_Zigbee\Projects\zstack\HomeAutomation\SampleThermostat\CC2530DB\..\..\..\..\..\Components\zmac\f8w\
#        -Ohz --require_prototypes
#    List file          =  
#        D:\GitHub\TripleS_Zigbee\Projects\zstack\HomeAutomation\SampleThermostat\CC2530DB\CoordinatorEB\List\uti.lst
#    Object file        =  
#        D:\GitHub\TripleS_Zigbee\Projects\zstack\HomeAutomation\SampleThermostat\CC2530DB\CoordinatorEB\Obj\uti.r51
#
###############################################################################

D:\GitHub\TripleS_Zigbee\Projects\zstack\HomeAutomation\MY-SOURCE\uti.c
      1          #include "uti.h"
      2          #include "ZComDef.h"
      3          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
      4          uint8 * Int16ToString(uint16 value)
   \                     Int16ToString:
      5          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
      6            uint8 t = (uint8)(value&0x00FF);
   \   000004   EA           MOV     A,R2
   \   000005   F8           MOV     R0,A
      7            uint8 t1 = (uint8)(value>>8);
   \   000006   EB           MOV     A,R3
   \   000007   F9           MOV     R1,A
      8            static uint8 a[4];
      9            a[3] = (t&0x0F);
   \   000008   740F         MOV     A,#0xf
   \   00000A   58           ANL     A,R0
   \   00000B   90....       MOV     DPTR,#??a + 3
   \   00000E   F0           MOVX    @DPTR,A
     10            a[2] = (t>>4);
   \   00000F   E8           MOV     A,R0
   \   000010   C4           SWAP    A
   \   000011   540F         ANL     A,#0xf
   \   000013   90....       MOV     DPTR,#??a + 2
   \   000016   F0           MOVX    @DPTR,A
     11            a[1] = (t1&0x0F);
   \   000017   740F         MOV     A,#0xf
   \   000019   59           ANL     A,R1
   \   00001A   90....       MOV     DPTR,#??a + 1
   \   00001D   F0           MOVX    @DPTR,A
     12            a[0] = (t1>>4); 
   \   00001E   E9           MOV     A,R1
   \   00001F   C4           SWAP    A
   \   000020   540F         ANL     A,#0xf
   \   000022   90....       MOV     DPTR,#??a
   \   000025   F0           MOVX    @DPTR,A
     13            for (uint8 i = 0; i < 4; i++){
   \   000026   7A00         MOV     R2,#0x0
     14              if (a[i] > 9){
   \                     ??Int16ToString_0:
   \   000028   EA           MOV     A,R2
   \   000029   F8           MOV     R0,A
   \   00002A   74..         MOV     A,#??a & 0xff
   \   00002C   28           ADD     A,R0
   \   00002D   F582         MOV     DPL,A
   \   00002F   E4           CLR     A
   \   000030   34..         ADDC    A,#(??a >> 8) & 0xff
   \   000032   F583         MOV     DPH,A
   \   000034   E0           MOVX    A,@DPTR
   \   000035   C3           CLR     C
   \   000036   940A         SUBB    A,#0xa
   \   000038   E0           MOVX    A,@DPTR
   \   000039   4004         JC      ??Int16ToString_1
     15                a[i] = a[i] + 55;
   \   00003B   2437         ADD     A,#0x37
   \   00003D   8002         SJMP    ??Int16ToString_2
     16              }
     17              else{
     18                a[i] = a[i] + 48;
   \                     ??Int16ToString_1:
   \   00003F   2430         ADD     A,#0x30
   \                     ??Int16ToString_2:
   \   000041   F0           MOVX    @DPTR,A
     19              }
     20            }
   \   000042   0A           INC     R2
   \   000043   EA           MOV     A,R2
   \   000044   C3           CLR     C
   \   000045   9404         SUBB    A,#0x4
   \   000047   40DF         JC      ??Int16ToString_0
     21            return a;
   \   000049   7A..         MOV     R2,#??a & 0xff
   \   00004B   7B..         MOV     R3,#(??a >> 8) & 0xff
   \   00004D                REQUIRE ?Subroutine0
   \   00004D                ; // Fall through to label ?Subroutine0
     22          }

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine0:
   \   000000   D083         POP     DPH
   \   000002   D082         POP     DPL
   \   000004   02....       LJMP    ?BRET

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     ??a:
   \   000000                DS 4
   \   000004                REQUIRE __INIT_XDATA_Z
     23          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     24          uint8* Int8ToString(uint8 value)
   \                     Int8ToString:
     25          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
     26            static uint8 a[2];
     27            a[1] = value&0x0F;
   \   000004   740F         MOV     A,#0xf
   \   000006   59           ANL     A,R1
   \   000007   90....       MOV     DPTR,#??a_1 + 1
   \   00000A   F0           MOVX    @DPTR,A
     28            a[0] = value>>4;
   \   00000B   E9           MOV     A,R1
   \   00000C   C4           SWAP    A
   \   00000D   540F         ANL     A,#0xf
   \   00000F   90....       MOV     DPTR,#??a_1
   \   000012   F0           MOVX    @DPTR,A
     29            for (uint8 i = 0; i < 2; i++){
   \   000013   7800         MOV     R0,#0x0
     30              if (a[i] > 9){
   \                     ??Int8ToString_0:
   \   000015   E8           MOV     A,R0
   \   000016   FA           MOV     R2,A
   \   000017   74..         MOV     A,#??a_1 & 0xff
   \   000019   2A           ADD     A,R2
   \   00001A   F582         MOV     DPL,A
   \   00001C   E4           CLR     A
   \   00001D   34..         ADDC    A,#(??a_1 >> 8) & 0xff
   \   00001F   F583         MOV     DPH,A
   \   000021   E0           MOVX    A,@DPTR
   \   000022   C3           CLR     C
   \   000023   940A         SUBB    A,#0xa
   \   000025   E0           MOVX    A,@DPTR
   \   000026   4004         JC      ??Int8ToString_1
     31                a[i] = a[i] + 55;
   \   000028   2437         ADD     A,#0x37
   \   00002A   8002         SJMP    ??Int8ToString_2
     32              }
     33              else{
     34                a[i] = a[i] + 48;
   \                     ??Int8ToString_1:
   \   00002C   2430         ADD     A,#0x30
   \                     ??Int8ToString_2:
   \   00002E   F0           MOVX    @DPTR,A
     35              }
     36            }
   \   00002F   08           INC     R0
   \   000030   E8           MOV     A,R0
   \   000031   C3           CLR     C
   \   000032   9402         SUBB    A,#0x2
   \   000034   40DF         JC      ??Int8ToString_0
     37            return a;
   \   000036   7A..         MOV     R2,#??a_1 & 0xff
   \   000038   7B..         MOV     R3,#(??a_1 >> 8) & 0xff
   \   00003A   80..         SJMP    ?Subroutine0
     38          }

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     ??a_1:
   \   000000                DS 2
   \   000002                REQUIRE __INIT_XDATA_Z

   \                                 In  segment BANK_RELAYS, align 1
   \                     `??Int16ToString::?relay`:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    Int16ToString

   \                                 In  segment BANK_RELAYS, align 1
   \                     `??Int8ToString::?relay`:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    Int8ToString

   Maximum stack usage in bytes:

   ISTACK Function
   ------ --------
      2   Int16ToString
      2   Int8ToString


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
       7  ?Subroutine0
      77  Int16ToString
       6  Int16ToString::?relay
      60  Int8ToString
       6  Int8ToString::?relay
       2  a
       4  a

 
 144 bytes in segment BANKED_CODE
  12 bytes in segment BANK_RELAYS
   6 bytes in segment XDATA_Z
 
  12 bytes of CODE     memory
 144 bytes of HUGECODE memory
   6 bytes of XDATA    memory

Errors: none
Warnings: none

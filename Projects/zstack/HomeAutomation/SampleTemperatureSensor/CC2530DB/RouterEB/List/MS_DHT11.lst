###############################################################################
#
# IAR C/C++ Compiler V9.30.1.3056 for 8051                06/Dec/2016  10:53:03
# Copyright 2004-2015 IAR Systems AB.
# Standalone license - IAR Embedded Workbench for 8051
#
#    Core               =  plain
#    Code model         =  banked
#    Data model         =  large
#    Calling convention =  xdata reentrant
#    Constant location  =  data_rom
#    Dptr setup         =  1,16
#                          
#    Source file        =  
#        D:\_GIT_COMBROS\[COMBROS] Z-Stack Home
#        1.2.2a.44539\Projects\zstack\HomeAutomation\MY-SOURCE\MS_DHT11.c
#    Command line       =  
#        -f "D:\_GIT_COMBROS\[COMBROS] Z-Stack Home
#        1.2.2a.44539\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\Tools\CC2530DB\f8wRouter.cfg"
#        (-DCPU32MHZ -DROOT=__near_func -DMAC_CFG_APP_PENDING_QUEUE=TRUE
#        -DMAC_CFG_TX_DATA_MAX=5 -DMAC_CFG_TX_MAX=8 -DMAC_CFG_RX_MAX=5
#        -DRTR_NWK) -f "D:\_GIT_COMBROS\[COMBROS] Z-Stack Home
#        1.2.2a.44539\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\Tools\CC2530DB\f8wConfig.cfg"
#        (-DZIGBEEPRO -DSECURE=1 -DZG_SECURE_DYNAMIC=0 -DREFLECTOR
#        -DDEFAULT_CHANLIST=0x00000800 -DZDAPP_CONFIG_PAN_ID=0xFAFA
#        -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MASK=0x007F
#        -DBEACON_REQUEST_DELAY=100 -DBEACON_REQ_DELAY_MASK=0x00FF
#        -DLINK_STATUS_JITTER_MASK=0x007F -DROUTE_EXPIRY_TIME=30
#        -DAPSC_ACK_WAIT_DURATION_POLLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7
#        -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3
#        -DNWK_MAX_DATA_RETRIES=2 -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9
#        -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40 -DNWK_MAX_BINDING_ENTRIES=4
#        -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01, 0x03, 0x05, 0x07,
#        0x09, 0x0B, 0x0D, 0x0F, 0x00, 0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C,
#        0x0D}" -DMAC_MAX_FRAME_SIZE=116 -DZDNWKMGR_MIN_TRANSMISSIONS=20
#        "-DCONST=const __code" -DGENERIC=__generic -DRFD_RCVC_ALWAYS_ON=FALSE
#        -DPOLL_RATE=1000 -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100
#        -DREJOIN_POLL_RATE=440 -DREJOIN_BACKOFF=900000 -DREJOIN_SCAN=900000)
#        -f "D:\_GIT_COMBROS\[COMBROS] Z-Stack Home
#        1.2.2a.44539\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\Tools\CC2530DB\f8wZCL.cfg"
#        "D:\_GIT_COMBROS\[COMBROS] Z-Stack Home
#        1.2.2a.44539\Projects\zstack\HomeAutomation\MY-SOURCE\MS_DHT11.c" -D
#        SECURE=1 -D TC_LINKKEY_JOIN -D NV_INIT -D xNV_RESTORE -D
#        HOLD_AUTO_START -D ZTOOL_P1 -D MT_TASK -D MT_APP_FUNC -D MT_SYS_FUNC
#        -D MT_ZDO_FUNC -D LCD_SUPPORTED=DEBUG -D MULTICAST_ENABLED=FALSE -D
#        ZCL_READ -D ZCL_WRITE -D ZCL_REPORT -D ZCL_EZMODE -D ZCL_BASIC -D
#        ZCL_IDENTIFY -D ZCL_TEMPERATURE_MEASUREMENT -lC
#        "D:\_GIT_COMBROS\[COMBROS] Z-Stack Home
#        1.2.2a.44539\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\RouterEB\List"
#        -lA "D:\_GIT_COMBROS\[COMBROS] Z-Stack Home
#        1.2.2a.44539\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\RouterEB\List"
#        --diag_suppress Pe001,Pa010 -o "D:\_GIT_COMBROS\[COMBROS] Z-Stack Home
#        1.2.2a.44539\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\RouterEB\Obj"
#        -e --debug --core=plain --dptr=16,1 --data_model=large
#        --code_model=banked --calling_convention=xdata_reentrant
#        --place_constants=data_rom --nr_virtual_regs 16 -I
#        "D:\_GIT_COMBROS\[COMBROS] Z-Stack Home
#        1.2.2a.44539\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\"
#        -I "D:\_GIT_COMBROS\[COMBROS] Z-Stack Home
#        1.2.2a.44539\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\Source\"
#        -I "D:\_GIT_COMBROS\[COMBROS] Z-Stack Home
#        1.2.2a.44539\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\Source\"
#        -I "D:\_GIT_COMBROS\[COMBROS] Z-Stack Home
#        1.2.2a.44539\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\ZMain\TI2530DB\"
#        -I "D:\_GIT_COMBROS\[COMBROS] Z-Stack Home
#        1.2.2a.44539\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\..\..\Components\hal\include\"
#        -I "D:\_GIT_COMBROS\[COMBROS] Z-Stack Home
#        1.2.2a.44539\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\..\..\Components\hal\target\CC2530EB\"
#        -I "D:\_GIT_COMBROS\[COMBROS] Z-Stack Home
#        1.2.2a.44539\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\..\..\Components\mac\include\"
#        -I "D:\_GIT_COMBROS\[COMBROS] Z-Stack Home
#        1.2.2a.44539\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\..\..\Components\mac\high_level\"
#        -I "D:\_GIT_COMBROS\[COMBROS] Z-Stack Home
#        1.2.2a.44539\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\..\..\Components\mac\low_level\srf04\"
#        -I "D:\_GIT_COMBROS\[COMBROS] Z-Stack Home
#        1.2.2a.44539\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\..\..\Components\mac\low_level\srf04\single_chip\"
#        -I "D:\_GIT_COMBROS\[COMBROS] Z-Stack Home
#        1.2.2a.44539\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\..\..\Components\mt\"
#        -I "D:\_GIT_COMBROS\[COMBROS] Z-Stack Home
#        1.2.2a.44539\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\..\..\Components\osal\include\"
#        -I "D:\_GIT_COMBROS\[COMBROS] Z-Stack Home
#        1.2.2a.44539\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\..\..\Components\services\saddr\"
#        -I "D:\_GIT_COMBROS\[COMBROS] Z-Stack Home
#        1.2.2a.44539\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\..\..\Components\services\sdata\"
#        -I "D:\_GIT_COMBROS\[COMBROS] Z-Stack Home
#        1.2.2a.44539\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\..\..\Components\stack\af\"
#        -I "D:\_GIT_COMBROS\[COMBROS] Z-Stack Home
#        1.2.2a.44539\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\..\..\Components\stack\nwk\"
#        -I "D:\_GIT_COMBROS\[COMBROS] Z-Stack Home
#        1.2.2a.44539\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\..\..\Components\stack\sapi\"
#        -I "D:\_GIT_COMBROS\[COMBROS] Z-Stack Home
#        1.2.2a.44539\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\..\..\Components\stack\sec\"
#        -I "D:\_GIT_COMBROS\[COMBROS] Z-Stack Home
#        1.2.2a.44539\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\..\..\Components\stack\sys\"
#        -I "D:\_GIT_COMBROS\[COMBROS] Z-Stack Home
#        1.2.2a.44539\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\..\..\Components\stack\zcl\"
#        -I "D:\_GIT_COMBROS\[COMBROS] Z-Stack Home
#        1.2.2a.44539\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\..\..\Components\stack\zdo\"
#        -I "D:\_GIT_COMBROS\[COMBROS] Z-Stack Home
#        1.2.2a.44539\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\..\..\Components\zmac\"
#        -I "D:\_GIT_COMBROS\[COMBROS] Z-Stack Home
#        1.2.2a.44539\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\..\..\Components\zmac\f8w\"
#        -Ohz --require_prototypes
#    List file          =  
#        D:\_GIT_COMBROS\[COMBROS] Z-Stack Home
#        1.2.2a.44539\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\RouterEB\List\MS_DHT11.lst
#    Object file        =  
#        D:\_GIT_COMBROS\[COMBROS] Z-Stack Home
#        1.2.2a.44539\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\RouterEB\Obj\MS_DHT11.r51
#
###############################################################################

D:\_GIT_COMBROS\[COMBROS] Z-Stack Home 1.2.2a.44539\Projects\zstack\HomeAutomation\MY-SOURCE\MS_DHT11.c
      1          /***************************************************************************************************
      2           *                                            INCLUDES
      3           ***************************************************************************************************/
      4          #include "MS_DHT11.h"

   \                                 In  segment SFR_AN, at 0x80
   \   union <unnamed> volatile __sfr _A_P0
   \                     _A_P0:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xf3
   \   unsigned char volatile __sfr P0SEL
   \                     P0SEL:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xfd
   \   unsigned char volatile __sfr P0DIR
   \                     P0DIR:
   \   000000                DS 1
      5          #include "hal_timer.h"
      6          /***************************************************************************************************
      7           *                                             MACROS
      8           ***************************************************************************************************/
      9          
     10          /***************************************************************************************************
     11           *                                            CONSTANTS
     12           ***************************************************************************************************/
     13           
     14          /***************************************************************************************************
     15           *                                             TYPEDEFS
     16           ***************************************************************************************************/
     17          
     18          /***************************************************************************************************
     19           *                                         GLOBAL VARIABLES
     20           ***************************************************************************************************/

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     21          uint8 OneWireDataBuffer[5] = {0,0,0,0,0};
   \                     OneWireDataBuffer:
   \   000000                DS 5
   \   000005                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     22          uint8 humidityValue =0;
   \                     humidityValue:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_I, align 1, keep-with-next
     23          uint8 tempValue = 1;
   \                     tempValue:
   \   000000                DS 1
   \   000001                REQUIRE `?<Initializer for tempValue>`
   \   000001                REQUIRE __INIT_XDATA_I
     24          

   \                                 In  segment XDATA_I, align 1, keep-with-next
     25          uint8 bitmask = 7;
   \                     bitmask:
   \   000000                DS 1
   \   000001                REQUIRE `?<Initializer for bitmask>`
   \   000001                REQUIRE __INIT_XDATA_I

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     26          uint8 byteIndex = 0;
   \                     byteIndex:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     27          uint8 loopCount = 0;
   \                     loopCount:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     28          uint8 _index = 0;
   \                     _index:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
     29          
     30          /***************************************************************************************************
     31           *                                          FUNCTIONS - External
     32           ***************************************************************************************************/
     33          
     34          /***************************************************************************************************
     35           *                                          FUNCTIONS - Local
     36           ***************************************************************************************************/
     37          
     38          void DHT11_SetDataPinInput(void);
     39          void DHT11_SetDataPinOutput(void);
     40          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     41          void DHT11_SetDataPinInput(void)
   \                     DHT11_SetDataPinInput:
     42          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
     43          	/* Select GPIO direction : input*/
     44          	P0DIR &= ~(DHT11_Data_BIT);
   \   000000   53FD7F       ANL     0xfd,#0x7f
     45          }
   \   000003   02....       LJMP    ?BRET
   \   000006                REQUIRE P0DIR

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     46          void DHT11_SetDataPinOutput(void)
   \                     DHT11_SetDataPinOutput:
     47          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
     48          	/* Select GPIO direction : output */
     49          	P0DIR |= DHT11_Data_BIT;
   \   000000   43FD80       ORL     0xfd,#0x80
     50          }
   \   000003   02....       LJMP    ?BRET
   \   000006                REQUIRE P0DIR
     51          
     52          /***************************************************************************************************
     53           *                                          FUNCTIONS - API
     54           ***************************************************************************************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     55          void DHT11_Init(void)
   \                     DHT11_Init:
     56          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
     57          	/* Select general purpose on I/O pins. */
     58          	P0SEL &= ~(DHT11_Data_BIT);
   \   000004   53F37F       ANL     0xf3,#0x7f
     59          
     60          	/* Select GPIO direction : output */
     61          	DHT11_SetDataPinOutput();
   \   000007                ; Setup parameters for call to function DHT11_SetDataPinOutput
   \   000007   12....       LCALL   `??DHT11_SetDataPinOutput::?relay`; Banked call to: DHT11_SetDataPinOutput
     62          
     63          	DHT11_Data = 1;
   \   00000A   D287         SETB    0x80.7
     64          }
   \   00000C   80..         SJMP    ??Subroutine3_0
   \   00000E                REQUIRE P0SEL
   \   00000E                REQUIRE _A_P0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine3_0:
   \   000000   D083         POP     DPH
   \   000002   D082         POP     DPL
   \   000004   02....       LJMP    ?BRET
     65          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     66          uint8 DHT11_ReadSensor(void)
   \                     DHT11_ReadSensor:
     67          {
   \   000000                REQUIRE ?V0
   \   000000                REQUIRE ?V1
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 0
     68          	DHT11_SetDataPinOutput();
   \   000005                ; Setup parameters for call to function DHT11_SetDataPinOutput
   \   000005   12....       LCALL   `??DHT11_SetDataPinOutput::?relay`; Banked call to: DHT11_SetDataPinOutput
     69          	DHT11_Data = 0;
   \   000008   C287         CLR     0x80.7
     70          	DelayMs(DHTLIB_DHT11_WAKEUP);
   \   00000A                ; Setup parameters for call to function DelayMs
   \   00000A   7A12         MOV     R2,#0x12
   \   00000C   7B00         MOV     R3,#0x0
   \   00000E   12....       LCALL   `??DelayMs::?relay`  ; Banked call to: DelayMs
     71          	DHT11_Data = 1;
   \   000011   D287         SETB    0x80.7
     72          	//disableInterrupts();
     73          	DelayUs(10);
   \   000013                ; Setup parameters for call to function DelayUs
   \   000013   7A0A         MOV     R2,#0xa
   \   000015   7B00         MOV     R3,#0x0
   \   000017   12....       LCALL   `??DelayUs::?relay`  ; Banked call to: DelayUs
     74          	DHT11_SetDataPinInput();
   \   00001A                ; Setup parameters for call to function DHT11_SetDataPinInput
   \   00001A   12....       LCALL   `??DHT11_SetDataPinInput::?relay`; Banked call to: DHT11_SetDataPinInput
     75          	
     76          	loopCount = 0;
   \   00001D   90....       MOV     DPTR,#loopCount
   \   000020   E4           CLR     A
   \   000021   F0           MOVX    @DPTR,A
     77          	while (DHT11_Data == 0)
   \                     ??DHT11_ReadSensor_0:
   \   000022   A287         MOV     C,0x80.7
   \   000024   400A         JC      ??DHT11_ReadSensor_1
     78          	{
     79          		loopCount ++;
   \   000026   12....       LCALL   ?Subroutine2 & 0xFFFF
     80          		if (loopCount > DHTLIB_TIMEOUT)
   \                     ??CrossCallReturnLabel_0:
   \   000029   40F7         JC      ??DHT11_ReadSensor_0
     81          		{
     82                //enableInterrupts();
     83                return DHTLIB_ERROR_ACK_L;
   \   00002B   7904         MOV     R1,#0x4
   \   00002D   02....       LJMP    ??DHT11_ReadSensor_2 & 0xFFFF
     84          		}
     85          	}
     86          	
     87          	loopCount = 0;
   \                     ??DHT11_ReadSensor_1:
   \   000030   E4           CLR     A
   \   000031   F0           MOVX    @DPTR,A
     88          	while (DHT11_Data != 0)
   \                     ??DHT11_ReadSensor_3:
   \   000032   A287         MOV     C,0x80.7
   \   000034   5012         JNC     ??DHT11_ReadSensor_4
     89          	{
     90          		loopCount ++;
   \   000036   12....       LCALL   ?Subroutine2 & 0xFFFF
     91          		if (loopCount > DHTLIB_TIMEOUT)
   \                     ??CrossCallReturnLabel_1:
   \   000039   40F7         JC      ??DHT11_ReadSensor_3
     92          		{
     93          	    //enableInterrupts();
     94          	    return DHTLIB_ERROR_ACK_H;
   \   00003B   7905         MOV     R1,#0x5
   \   00003D   02....       LJMP    ??DHT11_ReadSensor_2 & 0xFFFF
     95          		}	
     96          	}
     97          	
     98          	while (_index < 40)
     99          	{
    100          		loopCount = 0;
    101          		while (DHT11_Data == 0)
    102          		{
    103          			asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");
    104          			loopCount ++;
    105          			if (loopCount > DHTLIB_TIMEOUT)
    106          			{
    107                  //enableInterrupts();
    108                  return DHTLIB_ERROR_TIMEOUT;
    109          			}
    110          		}
    111          		
    112          		loopCount = 0;
    113          		while (DHT11_Data != 0)
    114          		{
    115          			asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");
    116          			loopCount ++;
    117          			if (loopCount > DHTLIB_TIMEOUT)
    118          			{
    119                  //enableInterrupts();
    120                  return DHTLIB_ERROR_TIMEOUT;
    121          			}
    122          		}
    123          		
    124          		if (loopCount > 20)
    125          		{
    126          			OneWireDataBuffer[byteIndex] |= (1 << bitmask);		
    127          		}
    128          		if (bitmask == 0)   // next byte			
    129          		{
    130          			bitmask = 7;
    131          			byteIndex++;
    132          		}
    133          		else
    134          		{
    135          			bitmask = bitmask - 1;
   \                     ??DHT11_ReadSensor_5:
   \   000040   14           DEC     A
   \                     ??DHT11_ReadSensor_6:
   \   000041   F0           MOVX    @DPTR,A
    136          		}
    137          		_index = _index + 1;
   \   000042   90....       MOV     DPTR,#_index
   \   000045   E0           MOVX    A,@DPTR
   \   000046   04           INC     A
   \   000047   F0           MOVX    @DPTR,A
   \                     ??DHT11_ReadSensor_4:
   \   000048   90....       MOV     DPTR,#_index
   \   00004B   E0           MOVX    A,@DPTR
   \   00004C   C3           CLR     C
   \   00004D   9428         SUBB    A,#0x28
   \   00004F   5061         JNC     ??DHT11_ReadSensor_7
   \   000051   90....       MOV     DPTR,#loopCount
   \   000054   E4           CLR     A
   \   000055   F0           MOVX    @DPTR,A
   \                     ??DHT11_ReadSensor_8:
   \   000056   A287         MOV     C,0x80.7
   \   000058   400C         JC      ??DHT11_ReadSensor_9
   \   00005A   00           nop
   \   00005B   00           nop
   \   00005C   00           nop
   \   00005D   00           nop
   \   00005E   00           nop
   \   00005F   12....       LCALL   ?Subroutine2 & 0xFFFF
   \                     ??CrossCallReturnLabel_2:
   \   000062   40F2         JC      ??DHT11_ReadSensor_8
   \   000064   8010         SJMP    ??DHT11_ReadSensor_10
   \                     ??DHT11_ReadSensor_9:
   \   000066   E4           CLR     A
   \   000067   F0           MOVX    @DPTR,A
   \                     ??DHT11_ReadSensor_11:
   \   000068   A287         MOV     C,0x80.7
   \   00006A   500E         JNC     ??DHT11_ReadSensor_12
   \   00006C   00           nop
   \   00006D   00           nop
   \   00006E   00           nop
   \   00006F   00           nop
   \   000070   00           nop
   \   000071   12....       LCALL   ?Subroutine2 & 0xFFFF
   \                     ??CrossCallReturnLabel_3:
   \   000074   40F2         JC      ??DHT11_ReadSensor_11
   \                     ??DHT11_ReadSensor_10:
   \   000076   7902         MOV     R1,#0x2
   \   000078   8047         SJMP    ??DHT11_ReadSensor_2
   \                     ??DHT11_ReadSensor_12:
   \   00007A   E0           MOVX    A,@DPTR
   \   00007B   C3           CLR     C
   \   00007C   9415         SUBB    A,#0x15
   \   00007E   4022         JC      ??DHT11_ReadSensor_13
   \   000080   75..01       MOV     ?V0,#0x1
   \   000083   75..00       MOV     ?V1,#0x0
   \   000086   90....       MOV     DPTR,#bitmask
   \   000089   E0           MOVX    A,@DPTR
   \   00008A   78..         MOV     R0,#?V0
   \   00008C   12....       LCALL   ?S_SHL
   \   00008F   90....       MOV     DPTR,#byteIndex
   \   000092   E0           MOVX    A,@DPTR
   \   000093   F8           MOV     R0,A
   \   000094   74..         MOV     A,#OneWireDataBuffer & 0xff
   \   000096   28           ADD     A,R0
   \   000097   F582         MOV     DPL,A
   \   000099   E4           CLR     A
   \   00009A   34..         ADDC    A,#(OneWireDataBuffer >> 8) & 0xff
   \   00009C   F583         MOV     DPH,A
   \   00009E   E0           MOVX    A,@DPTR
   \   00009F   45..         ORL     A,?V0
   \   0000A1   F0           MOVX    @DPTR,A
   \                     ??DHT11_ReadSensor_13:
   \   0000A2   90....       MOV     DPTR,#bitmask
   \   0000A5   E0           MOVX    A,@DPTR
   \   0000A6   7098         JNZ     ??DHT11_ReadSensor_5
   \   0000A8   7407         MOV     A,#0x7
   \   0000AA   F0           MOVX    @DPTR,A
   \   0000AB   90....       MOV     DPTR,#byteIndex
   \   0000AE   E0           MOVX    A,@DPTR
   \   0000AF   04           INC     A
   \   0000B0   808F         SJMP    ??DHT11_ReadSensor_6
    138          	}
    139          	
    140          	DHT11_SetDataPinOutput();
   \                     ??DHT11_ReadSensor_7:
   \   0000B2                ; Setup parameters for call to function DHT11_SetDataPinOutput
   \   0000B2   12....       LCALL   `??DHT11_SetDataPinOutput::?relay`; Banked call to: DHT11_SetDataPinOutput
    141          	DHT11_Data = 1;
   \   0000B5   D287         SETB    0x80.7
    142          	//enableInterrupts();
    143          	byteIndex = 0;
   \   0000B7   90....       MOV     DPTR,#byteIndex
   \   0000BA   E4           CLR     A
   \   0000BB   F0           MOVX    @DPTR,A
    144          	_index = 0;
   \   0000BC   90....       MOV     DPTR,#_index
   \   0000BF   F0           MOVX    @DPTR,A
    145          	
    146          	return DHTLIB_OK;
   \   0000C0   F9           MOV     R1,A
   \                     ??DHT11_ReadSensor_2:
   \   0000C1                REQUIRE ?Subroutine1
   \   0000C1                REQUIRE _A_P0
   \   0000C1                ; // Fall through to label ?Subroutine1
    147          }

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine1:
   \   000000   7F02         MOV     R7,#0x2
   \   000002   02....       LJMP    ?BANKED_LEAVE_XDATA

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine2:
   \   000000   E0           MOVX    A,@DPTR
   \   000001   04           INC     A
   \   000002   F0           MOVX    @DPTR,A
   \   000003   C3           CLR     C
   \   000004   9465         SUBB    A,#0x65
   \   000006   22           RET
    148          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    149          uint8 DHT11_GetValue(void)
   \                     DHT11_GetValue:
    150          {
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
    151          	uint8 checksum = 0;
   \   000005   7E00         MOV     R6,#0x0
    152          	uint8 ret_val;
    153          	ret_val = DHT11_ReadSensor();
    154          	
    155          	if (ret_val == DHTLIB_OK)
   \   000007                ; Setup parameters for call to function DHT11_ReadSensor
   \   000007   12....       LCALL   `??DHT11_ReadSensor::?relay`; Banked call to: DHT11_ReadSensor
   \   00000A   E9           MOV     A,R1
   \   00000B   7025         JNZ     ??DHT11_GetValue_0
    156          	{	
    157          		if (OneWireDataBuffer[4] == ((OneWireDataBuffer[0]+ OneWireDataBuffer[2])&0xFF))
   \   00000D   90....       MOV     DPTR,#OneWireDataBuffer + 2
   \   000010   E0           MOVX    A,@DPTR
   \   000011   FF           MOV     R7,A
   \   000012   90....       MOV     DPTR,#OneWireDataBuffer + 4
   \   000015   E0           MOVX    A,@DPTR
   \   000016   FC           MOV     R4,A
   \   000017   90....       MOV     DPTR,#OneWireDataBuffer
   \   00001A   E0           MOVX    A,@DPTR
   \   00001B   2F           ADD     A,R7
   \   00001C   6C           XRL     A,R4
   \   00001D   7001         JNZ     ??DHT11_GetValue_1
   \   00001F   E4           CLR     A
   \                     ??DHT11_GetValue_1:
   \   000020   7010         JNZ     ??DHT11_GetValue_0
    158          		{
    159          			humidityValue = OneWireDataBuffer[0] & 0x7F;
   \   000022   E0           MOVX    A,@DPTR
   \   000023   547F         ANL     A,#0x7f
   \   000025   90....       MOV     DPTR,#humidityValue
   \   000028   F0           MOVX    @DPTR,A
    160          			tempValue = OneWireDataBuffer[2] & 0x7F;
   \   000029   747F         MOV     A,#0x7f
   \   00002B   5F           ANL     A,R7
   \   00002C   90....       MOV     DPTR,#tempValue
   \   00002F   F0           MOVX    @DPTR,A
    161                checksum = 1;
   \   000030   7E01         MOV     R6,#0x1
    162          		}
    163          	}
    164          	OneWireDataBuffer[0] = 0;
   \                     ??DHT11_GetValue_0:
   \   000032   90....       MOV     DPTR,#OneWireDataBuffer
   \   000035   E4           CLR     A
   \   000036   F0           MOVX    @DPTR,A
    165          	OneWireDataBuffer[2] = 0;
   \   000037   90....       MOV     DPTR,#OneWireDataBuffer + 2
   \   00003A   F0           MOVX    @DPTR,A
    166          	OneWireDataBuffer[4] = 0;
   \   00003B   90....       MOV     DPTR,#OneWireDataBuffer + 4
   \   00003E   F0           MOVX    @DPTR,A
    167            return checksum;
   \   00003F   EE           MOV     A,R6
   \   000040   F9           MOV     R1,A
   \   000041   7F01         MOV     R7,#0x1
   \   000043   02....       LJMP    ?BANKED_LEAVE_XDATA
    168          }
    169          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine0:
   \   000000   E0           MOVX    A,@DPTR
   \   000001   F9           MOV     R1,A
   \   000002                REQUIRE ??Subroutine3_0
   \   000002                ; // Fall through to label ??Subroutine3_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    170          uint8 DHT11_GetHumidityValue(void)
   \                     DHT11_GetHumidityValue:
    171          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    172          	return humidityValue;
   \   000004   90....       MOV     DPTR,#humidityValue
   \   000007   02....       LJMP    ?Subroutine0 & 0xFFFF
    173          }

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    174          uint8 DHT11_GetTempValue(void)
   \                     DHT11_GetTempValue:
    175          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    176          	return tempValue;
   \   000004   90....       MOV     DPTR,#tempValue
   \   000007   02....       LJMP    ?Subroutine0 & 0xFFFF
    177          }
    178          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    179          int16 DHT11_GetPackageValue(void)
   \                     DHT11_GetPackageValue:
    180          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    181          	uint8 tmp_temperature;
    182          	uint8 tmp_humidity;
    183          	int16 tmp_package;
    184          
    185          //	DHT11_GetValue();
    186          	tmp_temperature = DHT11_GetTempValue();
    187          	tmp_humidity		= DHT11_GetHumidityValue();
    188          	tmp_package = BUILD_UINT16(tmp_temperature, tmp_humidity);
    189          	return tmp_package;
   \   000004   90....       MOV     DPTR,#tempValue
   \   000007   E0           MOVX    A,@DPTR
   \   000008   FA           MOV     R2,A
   \   000009   90....       MOV     DPTR,#humidityValue
   \   00000C   E0           MOVX    A,@DPTR
   \   00000D   F8           MOV     R0,A
   \   00000E   E4           CLR     A
   \   00000F   C8           XCH     A,R0
   \   000010   F9           MOV     R1,A
   \   000011   EA           MOV     A,R2
   \   000012   28           ADD     A,R0
   \   000013   E4           CLR     A
   \   000014   39           ADDC    A,R1
   \   000015   FB           MOV     R3,A
   \   000016   02....       LJMP    ??Subroutine3_0 & 0xFFFF
    190          }
    191          
    192          
    193          /***************************************************************************************************
    194          ***************************************************************************************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    195          void DelayUs(uint16 microSecs)
   \                     DelayUs:
    196          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
   \   000000   800A         SJMP    ??DelayUs_0
    197          	while(microSecs--)
    198          	{
    199          		/* 32 NOPs == 1 usecs */
    200          		asm("nop"); asm("nop"); asm("nop"); asm("nop"); asm("nop");
   \                     ??DelayUs_1:
   \   000002   00           nop
   \   000003   00           nop
   \   000004   00           nop
   \   000005   00           nop
   \   000006   00           nop
    201          		asm("nop"); asm("nop"); asm("nop"); asm("nop"); asm("nop");
   \   000007   00           nop
   \   000008   00           nop
   \   000009   00           nop
   \   00000A   00           nop
   \   00000B   00           nop
    202          //		asm("nop"); asm("nop"); asm("nop"); asm("nop"); asm("nop");
    203          //		asm("nop"); asm("nop"); asm("nop"); asm("nop"); asm("nop");
    204          //		asm("nop"); asm("nop"); asm("nop"); asm("nop"); asm("nop");
    205          //		asm("nop"); asm("nop"); asm("nop"); asm("nop"); asm("nop");
    206          //		asm("nop"); asm("nop");
    207          	}
   \                     ??DelayUs_0:
   \   00000C   EA           MOV     A,R2
   \   00000D   F8           MOV     R0,A
   \   00000E   EB           MOV     A,R3
   \   00000F   F9           MOV     R1,A
   \   000010   E8           MOV     A,R0
   \   000011   24FF         ADD     A,#-0x1
   \   000013   1A           DEC     R2
   \   000014   E9           MOV     A,R1
   \   000015   34FF         ADDC    A,#-0x1
   \   000017   FB           MOV     R3,A
   \   000018   E8           MOV     A,R0
   \   000019   49           ORL     A,R1
   \   00001A   70E6         JNZ     ??DelayUs_1
    208          }
   \   00001C   02....       LJMP    ?BRET
    209          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    210          void DelayMs(uint16 miliSecs)
   \                     DelayMs:
    211          {
   \   000000                REQUIRE ?V0
   \   000000                REQUIRE ?V1
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 0
   \   000005   EA           MOV     A,R2
   \   000006   FE           MOV     R6,A
   \   000007   EB           MOV     A,R3
   \   000008   FF           MOV     R7,A
    212          	uint16 i = 0;
    213          	
    214          	for (i = 0; i < 1000; i++)
   \   000009   75..E8       MOV     ?V0,#-0x18
   \   00000C   75..03       MOV     ?V1,#0x3
    215          	{
    216          		DelayUs(miliSecs);
   \                     ??DelayMs_0:
   \   00000F                ; Setup parameters for call to function DelayUs
   \   00000F   EE           MOV     A,R6
   \   000010   FA           MOV     R2,A
   \   000011   EF           MOV     A,R7
   \   000012   FB           MOV     R3,A
   \   000013   12....       LCALL   `??DelayUs::?relay`  ; Banked call to: DelayUs
    217          	}
   \   000016   E5..         MOV     A,?V0
   \   000018   24FF         ADD     A,#-0x1
   \   00001A   F5..         MOV     ?V0,A
   \   00001C   E5..         MOV     A,?V1
   \   00001E   34FF         ADDC    A,#-0x1
   \   000020   F5..         MOV     ?V1,A
   \   000022   E5..         MOV     A,?V0
   \   000024   45..         ORL     A,?V1
   \   000026   70E7         JNZ     ??DelayMs_0
    218          }
   \   000028   02....       LJMP    ?Subroutine1 & 0xFFFF

   \                                 In  segment XDATA_ID, align 1, keep-with-next
   \                     `?<Initializer for tempValue>`:
   \   000000   01           DB 1

   \                                 In  segment XDATA_ID, align 1, keep-with-next
   \                     `?<Initializer for bitmask>`:
   \   000000   07           DB 7

   \                                 In  segment BANK_RELAYS, align 1
   \                     `??DHT11_SetDataPinInput::?relay`:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    DHT11_SetDataPinInput

   \                                 In  segment BANK_RELAYS, align 1
   \                     `??DHT11_SetDataPinOutput::?relay`:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    DHT11_SetDataPinOutput

   \                                 In  segment BANK_RELAYS, align 1
   \                     `??DHT11_Init::?relay`:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    DHT11_Init

   \                                 In  segment BANK_RELAYS, align 1
   \                     `??DHT11_ReadSensor::?relay`:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    DHT11_ReadSensor

   \                                 In  segment BANK_RELAYS, align 1
   \                     `??DHT11_GetValue::?relay`:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    DHT11_GetValue

   \                                 In  segment BANK_RELAYS, align 1
   \                     `??DHT11_GetHumidityValue::?relay`:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    DHT11_GetHumidityValue

   \                                 In  segment BANK_RELAYS, align 1
   \                     `??DHT11_GetTempValue::?relay`:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    DHT11_GetTempValue

   \                                 In  segment BANK_RELAYS, align 1
   \                     `??DHT11_GetPackageValue::?relay`:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    DHT11_GetPackageValue

   \                                 In  segment BANK_RELAYS, align 1
   \                     `??DelayUs::?relay`:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    DelayUs

   \                                 In  segment BANK_RELAYS, align 1
   \                     `??DelayMs::?relay`:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    DelayMs
    219          	
    220          

   Maximum stack usage in bytes:

   ISTACK XSTACK Function
   ------ ------ --------
      2      0   DHT11_GetHumidityValue
      2      0   DHT11_GetPackageValue
      2      0   DHT11_GetTempValue
      0      9   DHT11_GetValue
        0      9   -> DHT11_ReadSensor
      2      0   DHT11_Init
        2      0   -> DHT11_SetDataPinOutput
      0     19   DHT11_ReadSensor
        0     10   -> DHT11_SetDataPinInput
        0     10   -> DHT11_SetDataPinOutput
        0     10   -> DelayMs
        0     10   -> DelayUs
      0     10   DHT11_SetDataPinInput
      0     10   DHT11_SetDataPinOutput
      0     20   DelayMs
        0     10   -> DelayUs
      0     10   DelayUs


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
       1  ?<Initializer for bitmask>
       1  ?<Initializer for tempValue>
       7  ??Subroutine3_0
       2  ?Subroutine0
       5  ?Subroutine1
       7  ?Subroutine2
      10  DHT11_GetHumidityValue
       6  DHT11_GetHumidityValue::?relay
      25  DHT11_GetPackageValue
       6  DHT11_GetPackageValue::?relay
      10  DHT11_GetTempValue
       6  DHT11_GetTempValue::?relay
      70  DHT11_GetValue
       6  DHT11_GetValue::?relay
      14  DHT11_Init
       6  DHT11_Init::?relay
     193  DHT11_ReadSensor
       6  DHT11_ReadSensor::?relay
       6  DHT11_SetDataPinInput
       6  DHT11_SetDataPinInput::?relay
       6  DHT11_SetDataPinOutput
       6  DHT11_SetDataPinOutput::?relay
      43  DelayMs
       6  DelayMs::?relay
      31  DelayUs
       6  DelayUs::?relay
       5  OneWireDataBuffer
       1  P0DIR
       1  P0SEL
       1  _A_P0
       1  _index
       1  bitmask
       1  byteIndex
       1  humidityValue
       1  loopCount
       1  tempValue

 
 429 bytes in segment BANKED_CODE
  60 bytes in segment BANK_RELAYS
   3 bytes in segment SFR_AN
   2 bytes in segment XDATA_I
   2 bytes in segment XDATA_ID
   9 bytes in segment XDATA_Z
 
 491 bytes of CODE  memory
   0 bytes of DATA  memory (+ 3 bytes shared)
  11 bytes of XDATA memory

Errors: none
Warnings: none
